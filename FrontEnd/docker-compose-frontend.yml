version: "3.8"  # Docker Compose 파일 버전을 지정합니다. "3.8"은 사용 가능한 최신 버전 중 하나입니다.

services:
  nowdoboss_react:
    container_name: nowdoboss_react  # 컨테이너의 이름을 설정합니다.
    build:  # 도커 이미지 빌드 관련 설정입니다.
      context: .  # Dockerfile이 위치한 디렉토리 경로입니다.
      dockerfile: ReactServer.Dockerfile  # 사용할 Dockerfile의 이름입니다.
    image: nowdoboss_frontend_img  # 빌드된 이미지의 이름을 설정합니다.
    volums:
      - react_build:/usr/src/app/dist  # 빌드 결과물을 볼륨에 저장
    restart: always  # 컨테이너가 항상 재시작되도록 설정합니다.
    networks:
      - nowdoboss_net  # 사용할 네트워크를 지정합니다.

  nowdoboss_frontend:
    container_name: nowdoboss_frontend
    build:
      context: ../CICD/Nginx
      dockerfile: Nginx.Dockerfile
      volumes:
        - react_build:/usr/share/nginx/html # 같은 볼륨을 Nginx가 사용하여 정적 파일을 서빙
    # volumes:
    #   - ./certbot/conf:/etc/letsencrypt
    #   - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    networks:
      - nowdoboss_net
    depends_on:
      - nowdoboss_react

  nowdoboss_certbot:
    container_name: nowdoboss_certbot
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      /bin/sh -c '
      if [ ! -d "/etc/letsencrypt/live" ]; then
        echo "Initializing Certbot directories and configuration...";
        mkdir -p /etc/letsencrypt/live /etc/letsencrypt/archive /etc/letsencrypt/renewal;
      fi;
      trap exit TERM; while :; do certbot renew; sleep 12h & wait $$!; done;'
    depends_on:
      - nowdoboss_frontend

volumes:
  react_build:  # 공유 볼륨 선언

networks:
  nowdoboss_net:  # 사용할 네트워크를 정의합니다. 여기서는 기본 설정을 사용합니다.
