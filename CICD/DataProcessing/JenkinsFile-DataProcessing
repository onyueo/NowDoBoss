pipeline {
    agent any  // 이 파이프라인이 실행될 Jenkins 에이전트를 지정합니다. 'any'는 사용 가능한 임의의 에이전트에서 실행될 수 있음을 의미합니다.
    triggers {
        GenericTrigger(
            genericVariables: [
                [key: 'USER_NAME', value: '$.user.name', expressionType: 'JSONPath'],
                [key: 'IF_MERGED', value: '$.object_attributes.state', expressionType: 'JSONPath'],
                [key: 'BASE_BRANCH', value: '$.object_attributes.target_branch', expressionType: 'JSONPath'],
                [key: 'LABEL', value: '$.labels[*].title', expressionType: 'JSONPath']
            ],
            causeString: 'Triggered by GitLab Merge Request by ${USER_NAME}',
            token: 'util',
            printContributedVariables: true,
            printPostContent: true,
            regexpFilterText: '$IF_MERGED $BASE_BRANCH $LABEL',
            regexpFilterExpression: '(?=.*merged)(?=.*develop)(?=.*CICD-DataProcessing)'
        )
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    // 빌드 설명 설정
                    currentBuild.description = "Merge requested by: ${env.USER_NAME}"
                }
            }
        }

        stage('Build and Deploy Hadoop And Spark') {
            steps {
                script {
                    echo "하둡 + 스파크 (masater1) 컨테이너 구성 실행 상태 확인 중..."
                    def isHadoopRunning_master1 = sh(script: "docker ps --filter name=master1 --filter status=running --format '{{.Names}}'", returnStdout: true).trim()
                    echo "Kafka-1 실행 상태: ${isHadoopRunning_master1}"

                    echo "하둡 + 스파크 (worker1) 컨테이너 구성 실행 상태 확인 중..."
                    def isHadoopRunning_worker1 = sh(script: "docker ps --filter name=worker1 --filter status=running --format '{{.Names}}'", returnStdout: true).trim()
                    echo "Kafka-1 실행 상태: ${isHadoopRunning_worker1}"

                    echo "하둡 + 스파크 (worker2) 컨테이너 구성 실행 상태 확인 중..."
                    def isHadoopRunning_worker2 = sh(script: "docker ps --filter name=worker2 --filter status=running --format '{{.Names}}'", returnStdout: true).trim()
                    echo "Kafka-1 실행 상태: ${isHadoopRunning_worker2}"

                    if (isHadoopRunning_master1 == "" || isHadoopRunning_master1 == "" || isHadoopRunning_master1 == "") {
                        echo "하둡 + 스파크 dockerfile 빌드..."
                        sh "docker compose -f docker-compose-hadoopSpark.yml up --build -d"   
                    }
                }
            }
        }
    }
}
