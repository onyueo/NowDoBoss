version: "3.8"  # Docker Compose 파일 버전을 지정합니다. "3.8"은 사용 가능한 최신 버전 중 하나입니다.

services:
  nowdoboss_frontend:
    container_name: nowdoboss_frontend  # 컨테이너의 이름을 설정합니다.
    build:  # 도커 이미지 빌드 관련 설정입니다.
      context: ./FrontEnd  # Dockerfile이 위치한 디렉토리 경로입니다.
      dockerfile: ReactServer.Dockerfile  # 사용할 Dockerfile의 이름입니다.
    image: nowdoboss_frontend_img  # 빌드된 이미지의 이름을 설정합니다.
    restart: always  # 컨테이너가 항상 재시작되도록 설정합니다.
    ports:
      - "80:80"  # 호스트의 80 포트를 컨테이너의 80 포트에 바인딩합니다.
      - "443:443" # SSL을 위한 443 포트를 추가합니다.
    volumes:
      - certs:/etc/letsencrypt  # 인증서를 저장할 볼륨을 지정합니다.
    networks:
      - nowdoboss_net  # 사용할 네트워크를 지정합니다.

  nowdoboss_backend_springboot:
    container_name: nowdoboss_backend_springboot  # 컨테이너의 이름을 설정합니다.
    build:  # 도커 이미지 빌드 관련 설정입니다.
      context: ./BackEnd/SpringBootServer  # Dockerfile이 위치한 디렉토리 경로입니다.
      dockerfile: SpringBootServer.Dockerfile  # 사용할 Dockerfile의 이름입니다.
    image: nowdoboss_backend_springboot_img  # 빌드된 이미지의 이름을 설정합니다.
    restart: always  # 컨테이너가 항상 재시작되도록 설정합니다.
    ports:
      - "8080:8080"  # 호스트의 8080 포트를 컨테이너의 8080 포트에 바인딩합니다.
    environment:
      - jasypt.encryptor.key=ssafy  # 환경 변수로 jasypt 암호화 키를 설정합니다.
    networks:
      - nowdoboss_net  # 사용할 네트워크를 지정합니다.

  nowdoboss_certbot:
    image: certbot/certbot
    volumes:
      - certs:/etc/letsencrypt
      - web-root:/usr/share/nginx/html
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - nowdoboss_net

volumes:
  certs:
  web-root:

networks:
  nowdoboss_net:  # 사용할 네트워크를 정의합니다. 여기서는 기본 설정을 사용합니다.
